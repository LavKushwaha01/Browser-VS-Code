name: Deploy frontend 
on:
 push: 
  branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: cheak the code
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push 
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: lavkushwaha01/browser-vs-code:latest  
      - name: Decode SSH key
        run: |
              echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > lav.pem
              chmod 600 lav.pem
      - name: Set up Docker on target machine
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      
      - name: Deploy to the VM
        run: |
           echo "âœ… Connected to EC2"
           ssh -o StrictHostKeyChecking=no -i lav.pem ubuntu@15.206.205.127 -t "docker stop browser-vs-code || true && docker rm browser-vs-code || true && docker run --name browser-vs-code  -d -p 8080:8080 lavkushwaha01/browser-vs-code:latest"
      
